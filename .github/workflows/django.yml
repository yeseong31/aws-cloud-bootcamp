# Actions 작업명
name: AWS Cloud Bootcamp - Django CI

# 이벤트 바인딩: main 브랜치에 push 이벤트 발생 시 실행
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 이벤트 발생 시 아래 작업들 실행
jobs:
  # 작업 분류: 빌드 (빌드와 배포 분류 가능)
  build:

    # 운영 체제 설정: Ubuntu
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    # 작업의 세부 단계 설정
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # 패키지 설치
    - name: install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install eventlet==0.30.2

    # 환경 변수 설정
    - name: create .env
      shell: bash
      env:
        SECRET_KEY: ${{ envs.SECRET_KEY }}
        DJANGO_DEBUG: ${{ envs.DJANGO_DEBUG }}
        ELASTIC_HOST: ${{ envs.ELASTIC_HOST }}
        DOMAIN_NAME: ${{ envs.DOMAIN_NAME }}
        DB_ENGINE: ${{ envs.DB_ENGINE }}
        DB_USER: ${{ envs.DB_USER }}
        DB_PASSWORD: ${{ envs.DB_PASSWORD }}
        DB_HOST: ${{ envs.DB_HOST }}
        DB_PORT: ${{ envs.DB_PORT }}
        NOTION_TOKEN: ${{ envs.NOTION_TOKEN }}

    # 로그 파일 위치 지정
    - name: make logs dir
      run: |
        cd ~
        . aws.sh
        mkdir logs

    # 소스 파일 압축
    - name: zip artifacts
      run: zip -r ./artifacts/build.zip ./app/* appspec.yml

    # AWS S3에 압축 파일을 전달하는 설정 및 명령어
    - name: deploy to s3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_MANAGER_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_MANAGER_SECRET_ACCESS_KEY }}
        AWS_REGION: ap-northeast-2
        SOURCE_DIR: './artifacts'
        DEST_DIR: 'backend/'
